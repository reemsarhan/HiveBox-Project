# GitHub Actions Workflow for a Python Flask App with Docker

name: Python Flask Application with Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository
    - uses: actions/checkout@v4

    # Step 2: Set up Python 3.10
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    # Step 3: Install dependencies for linting and testing
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    # Step 4: Lint with flake8
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    # Step 5: Test with pytest
    - name: Test with pytest
      run: |
        pytest

    # Step 6: Build the Docker image
    - name: Build Docker image
      run: |
        docker build -t flask-app .

    # Step 7: Run the Docker container for testing
    - name: Run Docker container
      run: |
        docker run -d -p 5000:5000 --name flask-app-container flask-app
        sleep 10  # Wait for the container to start
        curl -f http://localhost:5000/ || (echo "Health check failed" && exit 1)

    # Step 8: Clean up Docker container
    - name: Clean up Docker
      run: |
        docker stop flask-app-container
        docker rm flask-app-container
